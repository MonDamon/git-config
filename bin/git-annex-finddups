#!/usr/bin/perl

use strict;
use warnings;

use File::Find;

use constant DOTS_EVERY => 10_000;

my %keys;

push @ARGV, '.' unless @ARGV;

my $processed = 0;

$| = 1;
find(\&wanted, @ARGV);
print "\n" if $processed > DOTS_EVERY;
show_dups();

sub inc {
    if (++$processed % DOTS_EVERY == 0) {
        print ".";
    }
}

sub wanted {
    inc();
    return unless -l;

    my $dst = readlink($_) or die "readline($_) failed: $!\n";
    my $key = $dst;
    unless ($key =~ s!^(../)*\.git/annex/objects/!!) {
        #print "Skipping non-annexed symlink $File::Find::name -> $dst\n";
        return;
    }

    $key =~ s!(/SHA[\w-]+)\1!$1!;

    push @{ $keys{$key} }, $File::Find::name;
}

sub show_dups {
    while (my ($key, $files) = each %keys) {
        next unless @$files > 1;

        print "$key\n";
        print map "   $_\n", @$files;
    }
}
